# Default values for ecr-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# -- image configuration
image:
  repository: esailors/aws-ecr-http-proxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.5.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# -- configure service account
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- annotations to place on pod
podAnnotations: {}

# -- security context for the pod
podSecurityContext: {}
  # fsGroup: 2000

# -- securityContext for the container
securityContext:
  # capabilities:
  #  drop:
  #  - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Kubernetes service
service:
  type: ClusterIP
  port: 80

# -- ingress configuration
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
env: []
#  - name: UPSTREAM
#    value: https://someAccountId.dkr.ecr.someRegion.amazonaws.com
#  - name: AWS_REGION
#    value: someRegion
#  - name: AWS_ACCESS_KEY_ID
#    valueFrom:
#      secretKeyRef:
#        name: mysecret
#        key: AWS_ACCESS_KEY_ID
#  - name: AWS_SECRET_ACCESS_KEY
#    valueFrom:
#      secretKeyRef:
#        name: mysecret
#        key: AWS_SECRET_ACCESS_KEY
#  - name: RESOLVER
#    value: kube-dns.kube-system.svc
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- configure secret. AWS tokens go here
secret:
  create: false
  annotations: {}
  existingSecret: ""
  # awsAccessKeyId: "someKeyId"
  # awsSecretAccessKey: "someAccessKey"

# -- enable HPA
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

podLabels: {}
  # key1: value1
  # key2: value2
