{{- if .Values.createPostgresqlSecret -}}
{{- $relname := printf "%s-%s" .Release.Name "postgresql" -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{- if .Values.postgresql.existingSecret }} {{ .Values.postgresql.existingSecret }} {{ else }} {{ $relname }} {{- end }}
  labels: {{- include "backend.labels.standard" . | nindent 4 }}
  annotations:
type: Opaque
data:
  {{- if .Release.IsUpgrade }}
      # check to see if secret already exists in namespace.    
    {{- if (index (lookup "v1" "Secret" .Release.Namespace $relname ) ) }}
      postgresql-postgres-password: {{ index (lookup "v1" "Secret" .Release.Namespace $relname ).data "postgresql-password" }}
      {{ .Values.postgresql.secretKey }}: {{ index (lookup "v1" "Secret" .Release.Namespace $relname ).data "postgresql-password" }}
    {{- else if (index (lookup "v1" "Secret" .Release.Namespace .Values.postgresql.existingSecret ) ) }}
      postgresql-postgres-password: {{ index (lookup "v1" "Secret" .Release.Namespace .Values.postgresql.existingSecret ).data "postgresql-password" }}
      {{ .Values.postgresql.secretKey }}: {{ index (lookup "v1" "Secret" .Release.Namespace .Values.postgresql.existingSecret ).data "postgresql-password" }}
    {{ else }}
    # if a secret isn't found when perfroming an upgrade create a new secret.
      {{- if .Values.postgresql.postgresqlPassword }}
        postgresql-postgres-password: {{ .Values.postgresql.postgresqlPassword | b64enc | quote }}
        {{ .Values.postgresql.secretKey }}: {{ .Values.postgresql.postgresqlPassword | b64enc | quote }}
      {{- else }}
        {{- $postgresRandomPassword := randAlphaNum 16 | b64enc | quote }}
        postgresql-postgres-password: {{ $postgresRandomPassword }}
        {{ .Values.postgresql.secretKey }}: {{ $postgresRandomPassword }}
      {{- end }}
    {{- end }}
  {{ else }}
# Perform normal install operation
    {{- if .Values.postgresql.postgresqlPassword }}
      postgresql-postgres-password: {{ .Values.postgresql.postgresqlPassword | b64enc | quote }}
      {{ .Values.postgresql.secretKey }}: {{ .Values.postgresql.postgresqlPassword | b64enc | quote }}
    {{- else }}
      {{- $postgresRandomPassword := randAlphaNum 16 | b64enc | quote }}
      postgresql-postgres-password: {{ $postgresRandomPassword }}
      {{ .Values.postgresql.secretKey }}: {{ $postgresRandomPassword }}
    {{- end }}
  {{- end }}
{{- end }}
