apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}-apiserver
  labels: {{- include "backend.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.apiserver.replicaCount }}
  {{- if .Values.apiserver.persistentVolume.enabled }}
  strategy:
    type: Recreate
  {{- end }}
  selector:
    matchLabels: {{- include "backend.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "backend.labels.standard" . | nindent 8 }}
    spec:
      {{- with .Values.apiserver.image.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 6 }}
      {{- end }}
      serviceAccountName: {{ include "common.names.fullname" . }}-apiserver
      securityContext: {{- toYaml .Values.apiserver.podSecurityContext | nindent 8 }}
      {{- with .Values.apiserver.initContainers }}
      initContainers: {{- toYaml . | nindent 6 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}-apiserver
        securityContext: {{- toYaml .Values.apiserver.securityContext | nindent 12 }}
        image: {{ include "apiserver.image" . }}
        imagePullPolicy: {{ .Values.apiserver.image.pullPolicy }}
        {{- with .Values.apiserver.resources }}
        resources: {{ . | toYaml | nindent 10 }}
        {{- end }}
        env:
        - name: ALPINE_DATA_DIRECTORY
          value: "/data"
        {{- if .Values.postgresql.enabled }}
        - name: ALPINE_DATABASE_MODE
          value: "external"
        - name: ALPINE_DATABASE_DRIVER
          value: "org.postgresql.Driver"
        - name: ALPINE_DATABASE_URL
          value: jdbc:postgresql://{{ .Release.Name }}-postgresql/{{ .Values.postgresql.postgresqlDatabase }}
        - name: ALPINE_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgresql
              key: postgresql-password
        - name: ALPINE_DATABASE_USERNAME
          value: {{ .Values.postgresql.postgresqlUsername }}
        {{- end }}
        {{- with .Values.apiserver.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        volumeMounts:
        - name: data
          mountPath: /data
        - name: tmp
          mountPath: /tmp
        ports:
        - name: api
          containerPort: 8080
          protocol: TCP
      volumes:
      - name: tmp
        emptyDir: {}
      - name: data
        {{- if .Values.apiserver.persistentVolume.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.apiserver.persistentVolume.existingClaim }}{{ .Values.apiserver.persistentVolume.existingClaim }}{{- else }}{{ include "common.names.fullname" . }}-apiserver{{- end }}
        {{- else }}
        emptyDir:
        {{- if .Values.apiserver.emptyDir.sizeLimit }}
          sizeLimit: {{ .Values.apiserver.emptyDir.sizeLimit }}
        {{- else }}
          {}
        {{- end -}}
        {{- end }}
